{"ast":null,"code":"import fetch from 'node-fetch';\nimport clientConfig from './../client-config';\nimport { ApolloClient, InMemoryCache, HttpLink } from \"@apollo/client\";\nimport { ErrorLink, onError } from '@apollo/client/link/error';\nconst errorLink = onError(({\n  graphqlErrors,\n  networkError\n}) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({\n      message,\n      location,\n      path\n    }) => {\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\nconst link = from([ErrorLink, new HttpLink({\n  uri: clientConfig.graphqlUrl\n})]);\nconst client = new ApolloClient({});\nexport default client;","map":{"version":3,"sources":["/Users/Eunice/WebDev/Fellowship/woo-next/components/ApolloClient.js"],"names":["fetch","clientConfig","ApolloClient","InMemoryCache","HttpLink","ErrorLink","onError","errorLink","graphqlErrors","networkError","map","message","location","path","alert","link","from","uri","graphqlUrl","client"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,QAAtC,QAAsD,gBAAtD;AAEA,SAAQC,SAAR,EAAmBC,OAAnB,QAAiC,2BAAjC;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,CAAC;AAACE,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAD,KAAiC;AACvD,MAAGD,aAAH,EAAiB;AACbA,IAAAA,aAAa,CAACE,GAAd,CAAkB,CAAC;AAACC,MAAAA,OAAD;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,KAAD,KAA6B;AAC3CC,MAAAA,KAAK,CAAE,iBAAgBH,OAAQ,EAA1B,CAAL;AACH,KAFD;AAGH;AACJ,CANwB,CAAzB;AAOA,MAAMI,IAAI,GAAGC,IAAI,CAAC,CACdX,SADc,EAEd,IAAID,QAAJ,CAAa;AAACa,EAAAA,GAAG,EAAEhB,YAAY,CAACiB;AAAnB,CAAb,CAFc,CAAD,CAAjB;AAIA,MAAMC,MAAM,GAAG,IAAIjB,YAAJ,CAAiB,EAAjB,CAAf;AAEA,eAAeiB,MAAf","sourcesContent":["import fetch from 'node-fetch';\nimport clientConfig from './../client-config'\n\nimport { ApolloClient, InMemoryCache, HttpLink } from \"@apollo/client\";\n\nimport {ErrorLink, onError} from '@apollo/client/link/error'\nconst errorLink = onError(({graphqlErrors, networkError})=>{\n    if(graphqlErrors){\n        graphqlErrors.map(({message, location, path})=>{\n            alert(`Graphql error ${message}`)\n        })\n    }\n})\nconst link = from([\n    ErrorLink,\n    new HttpLink({uri: clientConfig.graphqlUrl})\n])\nconst client = new ApolloClient({})\n\nexport default client\n"]},"metadata":{},"sourceType":"module"}