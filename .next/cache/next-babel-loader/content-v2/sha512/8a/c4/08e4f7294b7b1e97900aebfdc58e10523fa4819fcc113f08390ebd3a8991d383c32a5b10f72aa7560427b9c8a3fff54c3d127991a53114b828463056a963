{"ast":null,"code":"import fetch from 'node-fetch';\nimport clientConfig from './../client-config';\nimport { ApolloClient, InMemoryCache, HttpLink, from } from \"@apollo/client\";\nimport { ErrorLink, onError } from '@apollo/client/link/error'; //error catching system\n\nvar errorLink = onError(function (_ref) {\n  var graphqlErrors = _ref.graphqlErrors,\n      networkError = _ref.networkError;\n\n  if (graphqlErrors) {\n    graphqlErrors.map(function (_ref2) {\n      var message = _ref2.message,\n          location = _ref2.location,\n          path = _ref2.path;\n      alert(\"Graphql errors here--> \".concat(message));\n    });\n  }\n});\nvar link = from([errorLink, new HttpLink({\n  uri: clientConfig.graphqlUrl\n})]);\nvar client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\nexport default client;","map":{"version":3,"sources":["/Users/Eunice/WebDev/Fellowship/woo-next/components/ApolloClient.js"],"names":["fetch","clientConfig","ApolloClient","InMemoryCache","HttpLink","from","ErrorLink","onError","errorLink","graphqlErrors","networkError","map","message","location","path","alert","link","uri","graphqlUrl","client","cache"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,QAAtC,EAAgDC,IAAhD,QAA4D,gBAA5D;AAEA,SAAQC,SAAR,EAAmBC,OAAnB,QAAiC,2BAAjC,C,CAEA;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,gBAAiC;AAAA,MAA/BE,aAA+B,QAA/BA,aAA+B;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;;AACvD,MAAGD,aAAH,EAAiB;AACbA,IAAAA,aAAa,CAACE,GAAd,CAAkB,iBAA6B;AAAA,UAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,UAAlBC,QAAkB,SAAlBA,QAAkB;AAAA,UAARC,IAAQ,SAARA,IAAQ;AAC3CC,MAAAA,KAAK,kCAA2BH,OAA3B,EAAL;AACH,KAFD;AAGH;AACJ,CANwB,CAAzB;AASA,IAAMI,IAAI,GAAGX,IAAI,CAAC,CACdG,SADc,EAEd,IAAIJ,QAAJ,CAAa;AAACa,EAAAA,GAAG,EAAEhB,YAAY,CAACiB;AAAnB,CAAb,CAFc,CAAD,CAAjB;AAIA,IAAMC,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;AAC5BkB,EAAAA,KAAK,EAAE,IAAIjB,aAAJ,EADqB;AAE5Ba,EAAAA,IAAI,EAACA;AAFuB,CAAjB,CAAf;AAKA,eAAeG,MAAf","sourcesContent":["import fetch from 'node-fetch';\nimport clientConfig from './../client-config'\n\nimport { ApolloClient, InMemoryCache, HttpLink, from } from \"@apollo/client\";\n\nimport {ErrorLink, onError} from '@apollo/client/link/error'\n\n//error catching system\nconst errorLink = onError(({graphqlErrors, networkError})=>{\n    if(graphqlErrors){\n        graphqlErrors.map(({message, location, path})=>{\n            alert(`Graphql errors here--> ${message}`)\n        })\n    }\n})\n\n\nconst link = from([\n    errorLink,\n    new HttpLink({uri: clientConfig.graphqlUrl})\n])\nconst client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link:link,\n})\n\nexport default client\n"]},"metadata":{},"sourceType":"module"}