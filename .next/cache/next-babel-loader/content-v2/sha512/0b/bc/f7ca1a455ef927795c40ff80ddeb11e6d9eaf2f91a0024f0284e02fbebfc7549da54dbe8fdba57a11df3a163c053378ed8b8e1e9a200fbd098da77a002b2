{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/Eunice/WebDev/Fellowship/woo-next/pages/index.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query{\\n    products(first:20){\\n        nodes{\\n            id\\n            productId\\n            averageRating\\n            slug\\n            description\\n            image {\\n                uri\\n                title\\n                srcSet\\n                sourceUrl\\n            }\\n            name\\n            price\\n        }\\n    }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from '../components/Layout'; // import clientConfig from '../client-config'\n\nimport client from './../components/ApolloClient'; // import fetch from  'isomorphic-unfetch'\n\nimport Products from '../components/Products';\nimport gql from 'graphql-tag'; //parses graphql query string into abstract syntax\n\nvar PRODUCTS_QUERY = gql(_templateObject());\n\nvar Index = function Index(props) {\n  // console.warn(props)\n  var products = props.products;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"helo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.query({\n            query: PRODUCTS_QUERY\n          });\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            products: res.data.products.nodes\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/Eunice/WebDev/Fellowship/woo-next/pages/index.js"],"names":["Layout","client","Products","gql","PRODUCTS_QUERY","Index","props","products","getInitialProps","query","res","data","nodes"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAA8B;;AAE9B,IAAMC,cAAc,GAAGD,GAAH,mBAApB;;AAqBA,IAAME,KAAK,GAAC,SAANA,KAAM,CAACC,KAAD,EAAS;AACjB;AADiB,MAEVC,QAFU,GAEAD,KAFA,CAEVC,QAFU;AAGjB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAMH,CATD;;KAAMF,K;AAWNA,KAAK,CAACG,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAQFP,MAAM,CAACQ,KAAP,CAAa;AAACA,YAAAA,KAAK,EAAEL;AAAR,WAAb,CARE;;AAAA;AAQdM,UAAAA,GARc;AAAA,2CASb;AACHH,YAAAA,QAAQ,EAACG,GAAG,CAACC,IAAJ,CAASJ,QAAT,CAAkBK;AADxB,WATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAeA,eAAeP,KAAf","sourcesContent":["import Layout from '../components/Layout'\n// import clientConfig from '../client-config'\nimport client from './../components/ApolloClient'\n\n// import fetch from  'isomorphic-unfetch'\nimport Products from '../components/Products'\nimport gql from 'graphql-tag' //parses graphql query string into abstract syntax\n\nconst PRODUCTS_QUERY = gql`query{\n    products(first:20){\n        nodes{\n            id\n            productId\n            averageRating\n            slug\n            description\n            image {\n                uri\n                title\n                srcSet\n                sourceUrl\n            }\n            name\n            price\n        }\n    }\n}`;\n\n\nconst Index=(props)=>{\n    // console.warn(props)\n    const {products}=props\n    return (\n        <div>\nhelo\n        </div>\n    )\n\n}\n\nIndex.getInitialProps = async () =>{\n    //isomorphic unfetch\n    // const res = await fetch(`${clientConfig.siteUrl}/getProducts`);\n    // const productsData = await res.json();\n\n    // return {\n    //     products: productsData\n    // }\n    const res = await client.query({query: PRODUCTS_QUERY});\n    return {\n        products:res.data.products.nodes\n    }\n\n\n}\nexport default Index;"]},"metadata":{},"sourceType":"module"}