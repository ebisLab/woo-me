{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Eunice/WebDev/Fellowship/woo-next/pages/index.js\";\nimport Layout from '../components/Layout'; // import clientConfig from '../client-config'\n\nimport client from './../components/ApolloClient'; // import fetch from  'isomorphic-unfetch'\n\nimport Products from '../components/Products';\nimport gql from 'graphql-tag'; //parses graphql query string into abstract syntax\n\nconst PRODUCTS_QUERY = gql`query{\n    products(first:20){\n        nodes{\n            id\n            productId\n            averageRating\n            slug\n            description\n            image {\n                uri\n                title\n                srcSet\n                sourceUrl\n            }\n            name\n            price\n        }\n    }\n}`;\n\nconst Index = props => {\n  // console.warn(props)\n  const {\n    products\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"helo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\nIndex.getInitialProps = async () => {\n  //isomorphic unfetch\n  // const res = await fetch(`${clientConfig.siteUrl}/getProducts`);\n  // const productsData = await res.json();\n  // return {\n  //     products: productsData\n  // }\n  const res = await client.query({\n    query: PRODUCTS_QUERY\n  });\n  return {\n    products: res.data.products.nodes\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/Eunice/WebDev/Fellowship/woo-next/pages/index.js"],"names":["Layout","client","Products","gql","PRODUCTS_QUERY","Index","props","products","getInitialProps","res","query","data","nodes"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAA8B;;AAE9B,MAAMC,cAAc,GAAGD,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAlBA;;AAqBA,MAAME,KAAK,GAAEC,KAAD,IAAS;AACjB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAWD,KAAjB;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CATD;;AAWAD,KAAK,CAACG,eAAN,GAAwB,YAAW;AAC/B;AACA;AACA;AAEA;AACA;AACA;AACA,QAAMC,GAAG,GAAG,MAAMR,MAAM,CAACS,KAAP,CAAa;AAACA,IAAAA,KAAK,EAAEN;AAAR,GAAb,CAAlB;AACA,SAAO;AACHG,IAAAA,QAAQ,EAACE,GAAG,CAACE,IAAJ,CAASJ,QAAT,CAAkBK;AADxB,GAAP;AAKH,CAdD;;AAeA,eAAeP,KAAf","sourcesContent":["import Layout from '../components/Layout'\n// import clientConfig from '../client-config'\nimport client from './../components/ApolloClient'\n\n// import fetch from  'isomorphic-unfetch'\nimport Products from '../components/Products'\nimport gql from 'graphql-tag' //parses graphql query string into abstract syntax\n\nconst PRODUCTS_QUERY = gql`query{\n    products(first:20){\n        nodes{\n            id\n            productId\n            averageRating\n            slug\n            description\n            image {\n                uri\n                title\n                srcSet\n                sourceUrl\n            }\n            name\n            price\n        }\n    }\n}`;\n\n\nconst Index=(props)=>{\n    // console.warn(props)\n    const {products}=props\n    return (\n        <div>\nhelo\n        </div>\n    )\n\n}\n\nIndex.getInitialProps = async () =>{\n    //isomorphic unfetch\n    // const res = await fetch(`${clientConfig.siteUrl}/getProducts`);\n    // const productsData = await res.json();\n\n    // return {\n    //     products: productsData\n    // }\n    const res = await client.query({query: PRODUCTS_QUERY});\n    return {\n        products:res.data.products.nodes\n    }\n\n\n}\nexport default Index;"]},"metadata":{},"sourceType":"module"}