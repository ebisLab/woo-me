{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Eunice/WebDev/Fellowship/woo-next/pages/index.js\";\nimport Layout from '../components/Layout';\nimport clientConfig from '../client-config';\nimport client from './../components/ApolloClient';\nimport fetch from 'isomorphic-unfetch';\nimport Products from '../components/Products';\nimport gql from 'graphql-tag'; //parses graphql query string into abstract syntax\n\nconst PRODUCTS_QUERY = gql`query{\n    products(first:20){\n        nodes{\n            id\n            productId\n            averageRating\n            slug\n            description\n            image {\n                uri\n                title\n                srcSet\n                sourceUrl\n            }\n            name\n            price\n        }\n    }\n}`;\n\nconst Index = props => {\n  console.warn(props);\n  const {\n    products\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-container\",\n        children: products.length ? products.map(item => /*#__PURE__*/_jsxDEV(Products, {\n          products: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 40\n        }, this)) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\nIndex.getInitialProps = async () => {\n  //isomorphic unfetch\n  const res = await fetch(`${clientConfig.siteUrl}/getProducts`);\n  const productsData = await res.json();\n  return {\n    products: productsData\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/Eunice/WebDev/Fellowship/woo-next/pages/index.js"],"names":["Layout","clientConfig","client","fetch","Products","gql","PRODUCTS_QUERY","Index","props","console","warn","products","length","map","item","id","getInitialProps","res","siteUrl","productsData","json"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,OAAOC,KAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAA8B;;AAE9B,MAAMC,cAAc,GAAGD,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAlBA;;AAqBA,MAAME,KAAK,GAAEC,KAAD,IAAS;AACjBC,EAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACA,QAAM;AAACG,IAAAA;AAAD,MAAWH,KAAjB;AACA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACCG,QAAQ,CAACC,MAAT,GACGD,QAAQ,CAACE,GAAT,CAAaC,IAAI,iBAAE,QAAC,QAAD;AAAwB,UAAA,QAAQ,EAAEA;AAAlC,WAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,gBAAnB,CADH,GAGC;AAJF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAjBD;;AAmBAR,KAAK,CAACS,eAAN,GAAwB,YAAW;AAC/B;AACA,QAAMC,GAAG,GAAG,MAAMd,KAAK,CAAE,GAAEF,YAAY,CAACiB,OAAQ,cAAzB,CAAvB;AACA,QAAMC,YAAY,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAA3B;AAEA,SAAO;AACHT,IAAAA,QAAQ,EAAEQ;AADP,GAAP;AAKH,CAVD;;AAWA,eAAeZ,KAAf","sourcesContent":["import Layout from '../components/Layout'\nimport clientConfig from '../client-config'\nimport client from './../components/ApolloClient'\n\nimport fetch from  'isomorphic-unfetch'\nimport Products from '../components/Products'\nimport gql from 'graphql-tag' //parses graphql query string into abstract syntax\n\nconst PRODUCTS_QUERY = gql`query{\n    products(first:20){\n        nodes{\n            id\n            productId\n            averageRating\n            slug\n            description\n            image {\n                uri\n                title\n                srcSet\n                sourceUrl\n            }\n            name\n            price\n        }\n    }\n}`;\n\n\nconst Index=(props)=>{\n    console.warn(props)\n    const {products}=props\n    return (\n        <div>\n            <Layout>\n                <div className=\"product-container\">\n                {products.length?(\n                    products.map(item=><Products key={item.id} products={item}/>)\n\n                ):''}\n                </div>\n                \n                </Layout>\n        </div>\n    )\n\n}\n\nIndex.getInitialProps = async () =>{\n    //isomorphic unfetch\n    const res = await fetch(`${clientConfig.siteUrl}/getProducts`);\n    const productsData = await res.json();\n\n    return {\n        products: productsData\n    }\n\n\n}\nexport default Index;"]},"metadata":{},"sourceType":"module"}