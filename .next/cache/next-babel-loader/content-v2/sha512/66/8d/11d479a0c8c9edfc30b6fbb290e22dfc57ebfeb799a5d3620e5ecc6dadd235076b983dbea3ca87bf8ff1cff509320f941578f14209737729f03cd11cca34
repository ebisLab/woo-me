{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/Eunice/WebDev/Fellowship/woo-less/pages/index.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query{\\n    products(first: 10) {\\n        edges {\\n          node {\\n            id\\n            name\\n            productId\\n            averageRating\\n            slug\\n            description\\n            image {\\n              uri\\n              title\\n              srcSet\\n              sourceUrl\\n            }\\n            link\\n            ... on SimpleProduct {\\n              price\\n            }\\n          }\\n        }\\n      }      \\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from '../components/Layout'; // import clientConfig from '../client-config'\n\nimport client from './../components/ApolloClient';\nimport fetch from 'isomorphic-unfetch';\nimport Products from '../components/Products';\nimport gql from 'graphql-tag'; //parses graphql query string into abstract syntax\n\nvar PRODUCTS_QUERY = gql(_templateObject());\n\nvar Index = function Index(props) {\n  console.warn(props);\n  var products = props.products;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-flex\"\n          },\n          children: products.length ? products.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(Products, {\n              products: item.node\n            }, item.node.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 58\n            }, _this);\n          }) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.query({\n            query: PRODUCTS_QUERY\n          });\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            products: res.data.products.edges\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/Eunice/WebDev/Fellowship/woo-less/pages/index.js"],"names":["Layout","client","fetch","Products","gql","PRODUCTS_QUERY","Index","props","console","warn","products","display","length","map","item","node","id","getInitialProps","query","res","data","edges"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,OAAOC,KAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAA8B;;AAG9B,IAAMC,cAAc,GAAGD,GAAH,mBAApB;;AA0BA,IAAME,KAAK,GAAC,SAANA,KAAM,CAACC,KAAD,EAAS;AACjBC,EAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AADiB,MAEVG,QAFU,GAEAH,KAFA,CAEVG,QAFU;AAGjB,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAC;AAAT,WAAZ;AAAA,oBACGD,QAAQ,CAACE,MAAT,GAAiBF,QAAQ,CAACG,GAAT,CAAa,UAAAC,IAAI;AAAA,gCAAE,QAAC,QAAD;AAA6B,cAAA,QAAQ,EAAEA,IAAI,CAACC;AAA5C,eAAeD,IAAI,CAACC,IAAL,CAAUC,EAAzB;AAAA;AAAA;AAAA;AAAA,qBAAF;AAAA,WAAjB,CAAjB,GAA0F;AAD7F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,CAhBD;;KAAMV,K;AAkBNA,KAAK,CAACW,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAQFhB,MAAM,CAACiB,KAAP,CAAa;AAACA,YAAAA,KAAK,EAACb;AAAP,WAAb,CARE;;AAAA;AAQdc,UAAAA,GARc;AAAA,2CASb;AACHT,YAAAA,QAAQ,EAACS,GAAG,CAACC,IAAJ,CAASV,QAAT,CAAkBW;AADxB,WATa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAeA,eAAef,KAAf","sourcesContent":["import Layout from '../components/Layout'\n// import clientConfig from '../client-config'\nimport client from './../components/ApolloClient'\n\nimport fetch from  'isomorphic-unfetch'\nimport Products from '../components/Products'\nimport gql from 'graphql-tag' //parses graphql query string into abstract syntax\n\n\nconst PRODUCTS_QUERY = gql`query{\n    products(first: 10) {\n        edges {\n          node {\n            id\n            name\n            productId\n            averageRating\n            slug\n            description\n            image {\n              uri\n              title\n              srcSet\n              sourceUrl\n            }\n            link\n            ... on SimpleProduct {\n              price\n            }\n          }\n        }\n      }      \n}`;\n\n\nconst Index=(props)=>{\n    console.warn(props)\n    const {products}=props\n    return (\n        <div>\n            <Layout>\n                <div className=\"container\">\n                  <div style={{display:\"inline-flex\"}}>\n                    {products.length?(products.map(item=><Products key={item.node.id} products={item.node}/>)):\"\"}\n                    </div>\n                </div>\n                \n                </Layout>\n        </div>\n    )\n\n}\n\nIndex.getInitialProps = async () =>{\n    //isomorphic unfetch\n    // const res = await fetch(`${clientConfig.siteUrl}/getProducts`);\n    // const productsData = await res.json();\n\n    // return {\n    //     products: productsData\n    // }\n    const res = await client.query({query:PRODUCTS_QUERY});\n    return {\n        products:res.data.products.edges\n    }\n\n\n}\nexport default Index;"]},"metadata":{},"sourceType":"module"}