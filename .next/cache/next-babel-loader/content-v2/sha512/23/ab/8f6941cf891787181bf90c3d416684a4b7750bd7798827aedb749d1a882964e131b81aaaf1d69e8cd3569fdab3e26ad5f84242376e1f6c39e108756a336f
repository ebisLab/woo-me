{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Eunice/WebDev/Fellowship/woo-next/pages/index.js\";\nimport Layout from '../components/Layout'; // import clientConfig from '../client-config'\n\nimport client from './../components/ApolloClient';\nimport fetch from 'isomorphic-unfetch';\nimport Products from '../components/Products';\nimport gql from 'graphql-tag'; //parses graphql query string into abstract syntax\n// const PRODUCTS_QUERY = gql`query{\n//     query MyQuery {\n//         users {\n//             edges {\n//               node {\n//                 id\n//               }\n//             }\n//           }\n//       }          \n// }`;\n\nconst PRODUCTS_QUERY = gql`query{\n    products(first: 10) {\n        edges {\n          node {\n            id\n            name\n            productId\n            averageRating\n            slug\n            description\n            image {\n              uri\n              title\n              srcSet\n              sourceUrl\n            }\n            link\n            ... on SimpleProduct {\n              price\n            }\n          }\n        }\n      }      \n}`;\n\nconst Index = props => {\n  console.warn(props);\n  const {\n    products\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-container\",\n        children: \"dude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\nIndex.getInitialProps = async () => {\n  //isomorphic unfetch\n  // const res = await fetch(`${clientConfig.siteUrl}/getProducts`);\n  // const productsData = await res.json();\n  // return {\n  //     products: productsData\n  // }\n  const res = await client.query({\n    query: PRODUCTS_QUERY\n  });\n  console.log(\"res->\");\n  return {\n    products: res.data.products.nodes\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/Eunice/WebDev/Fellowship/woo-next/pages/index.js"],"names":["Layout","client","fetch","Products","gql","PRODUCTS_QUERY","Index","props","console","warn","products","getInitialProps","res","query","log","data","nodes"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,OAAOC,KAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAA8B;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAGD,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAvBA;;AA0BA,MAAME,KAAK,GAAEC,KAAD,IAAS;AACjBC,EAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACA,QAAM;AAACG,IAAAA;AAAD,MAAWH,KAAjB;AACA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAlBD;;AAoBAD,KAAK,CAACK,eAAN,GAAwB,YAAW;AAC/B;AACA;AACA;AAEA;AACA;AACA;AACA,QAAMC,GAAG,GAAG,MAAMX,MAAM,CAACY,KAAP,CAAa;AAACA,IAAAA,KAAK,EAACR;AAAP,GAAb,CAAlB;AACAG,EAAAA,OAAO,CAACM,GAAR,CAAY,OAAZ;AACA,SAAO;AACHJ,IAAAA,QAAQ,EAACE,GAAG,CAACG,IAAJ,CAASL,QAAT,CAAkBM;AADxB,GAAP;AAKH,CAfD;;AAgBA,eAAeV,KAAf","sourcesContent":["import Layout from '../components/Layout'\n// import clientConfig from '../client-config'\nimport client from './../components/ApolloClient'\n\nimport fetch from  'isomorphic-unfetch'\nimport Products from '../components/Products'\nimport gql from 'graphql-tag' //parses graphql query string into abstract syntax\n\n// const PRODUCTS_QUERY = gql`query{\n//     query MyQuery {\n//         users {\n//             edges {\n//               node {\n//                 id\n//               }\n//             }\n//           }\n//       }          \n// }`;\n\nconst PRODUCTS_QUERY = gql`query{\n    products(first: 10) {\n        edges {\n          node {\n            id\n            name\n            productId\n            averageRating\n            slug\n            description\n            image {\n              uri\n              title\n              srcSet\n              sourceUrl\n            }\n            link\n            ... on SimpleProduct {\n              price\n            }\n          }\n        }\n      }      \n}`;\n\n\nconst Index=(props)=>{\n    console.warn(props)\n    const {products}=props\n    return (\n        <div>\n            <Layout>\n                <div className=\"product-container\">\n                    dude\n                {/* {products.length?(\n                    products.map(item=><Products key={item.id} products={item}/>)\n\n                ):''} */}\n                </div>\n                \n                </Layout>\n        </div>\n    )\n\n}\n\nIndex.getInitialProps = async () =>{\n    //isomorphic unfetch\n    // const res = await fetch(`${clientConfig.siteUrl}/getProducts`);\n    // const productsData = await res.json();\n\n    // return {\n    //     products: productsData\n    // }\n    const res = await client.query({query:PRODUCTS_QUERY});\n    console.log(\"res->\")\n    return {\n        products:res.data.products.nodes\n    }\n\n\n}\nexport default Index;"]},"metadata":{},"sourceType":"module"}