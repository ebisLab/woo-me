{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Eunice/WebDev/Fellowship/woo-less/pages/product.js\";\nimport Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\nconst Product = withRouter(props => {\n  const {\n    product\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: product ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"woo-next-single\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"woo-next-single__product card bg-light mb-3 p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: product.image.sourceUrl,\n            alt: \"Product Image\",\n            width: \"200\",\n            srcSet: product.image.srcSet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this) : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n});\n\nProduct.getInitialProps = async function (context) {\n  console.warn(context);\n  let {\n    query: {\n      slug\n    }\n  } = context;\n  const id = slug ? parseInt(slug.split('-').pop()) : context.query.id;\n  const PRODUCT_QUERY = gql` query Product( $id: Int ! ) {\n\t\t\tproductBy( productId: $id ) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tproductId\n\t\t\t\t\t\t\taverageRating\n\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\turi\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tsrcSet\n\t\t\t\t\t\t\t\tsourceUrl\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tprice\n\t\t\t\t\n\t\t\t} \n\t }`;\n  const res = await client.query({\n    query: PRODUCT_QUERY,\n    variables: {\n      id\n    }\n  });\n  return {\n    product: res.data.productBy\n  };\n};\n\nexport default Product;","map":{"version":3,"sources":["/Users/Eunice/WebDev/Fellowship/woo-less/pages/product.js"],"names":["Layout","withRouter","client","gql","Product","props","product","name","image","sourceUrl","srcSet","description","getInitialProps","context","console","warn","query","slug","id","parseInt","split","pop","PRODUCT_QUERY","res","variables","data","productBy"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,OAAO,GAAGH,UAAU,CAAEI,KAAK,IAAI;AAEpC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,sBACC,QAAC,MAAD;AAAA,cACGC,OAAO,gBACR;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,iDAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBAA+BA,OAAO,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACC;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,sBAA6BD,OAAO,CAACC;AAArC;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAK,YAAA,GAAG,EAAGD,OAAO,CAACE,KAAR,CAAcC,SAAzB;AAAqC,YAAA,GAAG,EAAC,eAAzC;AAAyD,YAAA,KAAK,EAAC,KAA/D;AAAqE,YAAA,MAAM,EAAGH,OAAO,CAACE,KAAR,CAAcE;AAA5F;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA2BJ,OAAO,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADQ,GAWL;AAZL;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CApByB,CAA1B;;AAsBAP,OAAO,CAACQ,eAAR,GAA0B,gBAAgBC,OAAhB,EAA0B;AAEnDC,EAAAA,OAAO,CAACC,IAAR,CAAcF,OAAd;AAEA,MAAI;AAAEG,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAAT,MAAsBJ,OAA1B;AACA,QAAMK,EAAE,GAAGD,IAAI,GAAGE,QAAQ,CAAEF,IAAI,CAACG,KAAL,CAAY,GAAZ,EAAkBC,GAAlB,EAAF,CAAX,GAAyCR,OAAO,CAACG,KAAR,CAAcE,EAAtE;AAEA,QAAMI,aAAa,GAAGnB,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAjBC;AAmBA,QAAMoB,GAAG,GAAG,MAAMrB,MAAM,CAACc,KAAP,CAAc;AAC/BA,IAAAA,KAAK,EAAEM,aADwB;AAE/BE,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AAFoB,GAAd,CAAlB;AAKA,SAAO;AACNZ,IAAAA,OAAO,EAAEiB,GAAG,CAACE,IAAJ,CAASC;AADZ,GAAP;AAIA,CAnCD;;AAqCA,eAAetB,OAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport client from \"../components/ApolloClient\";\nimport gql from 'graphql-tag';\n\nconst Product = withRouter( props => {\n\n\tconst { product } = props;\n\n\treturn (\n\t\t<Layout>\n\t\t\t{ product ? (\n\t\t\t\t<div className=\"woo-next-single\">\n\t\t\t\t\t<div className=\"woo-next-single__product card bg-light mb-3 p-5\">\n\t\t\t\t\t\t<div className=\"card-header\">{ product.name }</div>\n\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t<h4 className=\"card-title\">{ product.name }</h4>\n\t\t\t\t\t\t\t<img src={ product.image.sourceUrl } alt=\"Product Image\" width=\"200\" srcSet={ product.image.srcSet }/>\n\t\t\t\t\t\t\t<p className=\"card-text\">{ product.description }</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : '' }\n\t\t</Layout>\n\t)\n});\n\nProduct.getInitialProps = async function( context ) {\n\n\tconsole.warn( context );\n\n\tlet { query: { slug } } = context;\n\tconst id = slug ? parseInt( slug.split( '-' ).pop() ) : context.query.id;\n\n\tconst PRODUCT_QUERY = gql` query Product( $id: Int ! ) {\n\t\t\tproductBy( productId: $id ) {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\tproductId\n\t\t\t\t\t\t\taverageRating\n\t\t\t\t\t\t\tslug\n\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\timage {\n\t\t\t\t\t\t\t\turi\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\tsrcSet\n\t\t\t\t\t\t\t\tsourceUrl\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tprice\n\t\t\t\t\n\t\t\t} \n\t }`;\n\n\tconst res = await client.query(({\n\t\tquery: PRODUCT_QUERY,\n\t\tvariables: { id }\n\t}));\n\n\treturn {\n\t\tproduct: res.data.productBy\n\t}\n\n};\n\nexport default Product;"]},"metadata":{},"sourceType":"module"}